{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/login/LoginScreen.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/dc/DcScreen.js","components/search/SearchScreen.js","Hooks/useForm.js","selectors/getHeroesByName.js","components/heroes/HeroesSreen.js","selectors/getHeroById.js","routers/DashBoardRouters.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","auth/authReducer.js","App.js","index.js"],"names":["AuthContext","createContext","types","LoginScreen","dispatch","useContext","navigate","useNavigate","className","onClick","lastPath","localStorage","getItem","type","payload","name","Navbar","user","isActive","to","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","style","maxWidth","src","alt","HeroList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","MarvelScreen","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","handleInputChange","heroesFilters","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","onChange","HeroesSreen","heroeId","useParams","find","console","log","fontSize","DashBoardRouters","path","element","PrivateRoute","children","logged","PublicRoute","AppRouter","authReducer","state","action","init","JSON","App","useReducer","useEffect","setItem","stringify","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cfd946c.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n","export const types = {\r\n  login: \"[auth] login\",\r\n  logout: \"[auth] logout\",\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../auth/AuthContext\";\r\nimport { types } from \"../../types/types\";\r\n\r\nconst LoginScreen = () => {\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    const lastPath = localStorage.getItem(\"lastPath\") || \"/marvel\";\r\n\r\n    dispatch({\r\n      type: types.login,\r\n      payload: {\r\n        name: \"Martin\",\r\n      },\r\n    });\r\n\r\n    navigate(lastPath);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Login</h1>\r\n      <hr />\r\n\r\n      <button className=\"btn btn-primary\" onClick={handleLogin}>\r\n        login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../auth/AuthContext\";\r\nimport { types } from \"../../types/types\";\r\n\r\nexport const Navbar = () => {\r\n  const {\r\n    user: { name },\r\n    dispatch,\r\n  } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    dispatch({\r\n      type: types.logout,\r\n    });\r\n\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"navbar-collapse\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink\r\n            className={({ isActive }) =>\r\n              `nav-item nav-link ${isActive ? \"active\" : \"\"}`\r\n            }\r\n            to=\"/marvel\"\r\n          >\r\n            Marvel\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            className={({ isActive }) =>\r\n              `nav-item nav-link ${isActive ? \"active\" : \"\"}`\r\n            }\r\n            to=\"/dc\"\r\n          >\r\n            DC\r\n          </NavLink>\r\n          <NavLink\r\n            className={({ isActive }) =>\r\n              `nav-item nav-link ${isActive ? \"active\" : \"\"}`\r\n            }\r\n            to=\"/search\"\r\n          >\r\n            Search\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <span className=\"nav-item nav-link text-info\">{name}</span>\r\n\r\n          <button onClick={handleLogout} className=\"nav-item nav-link btn\">\r\n            Logout\r\n          </button>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","export const heroes = [\r\n  {\r\n    id: \"dc-batman\",\r\n    superhero: \"Batman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Bruce Wayne\",\r\n    first_appearance: \"Detective Comics #27\",\r\n    characters: \"Bruce Wayne\",\r\n  },\r\n  {\r\n    id: \"dc-superman\",\r\n    superhero: \"Superman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Kal-El\",\r\n    first_appearance: \"Action Comics #1\",\r\n    characters: \"Kal-El\",\r\n  },\r\n  {\r\n    id: \"dc-flash\",\r\n    superhero: \"Flash\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Jay Garrick\",\r\n    first_appearance: \"Flash Comics #1\",\r\n    characters: \"Jay Garrick, Barry Allen, Wally West, Bart Allen\",\r\n  },\r\n  {\r\n    id: \"dc-green\",\r\n    superhero: \"Green Lantern\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Alan Scott\",\r\n    first_appearance: \"All-American Comics #16\",\r\n    characters:\r\n      \"Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz\",\r\n  },\r\n  {\r\n    id: \"dc-arrow\",\r\n    superhero: \"Green Arrow\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Oliver Queen\",\r\n    first_appearance: \"More Fun Comics #73\",\r\n    characters: \"Oliver Queen\",\r\n  },\r\n  {\r\n    id: \"dc-wonder\",\r\n    superhero: \"Wonder Woman\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Princess Diana\",\r\n    first_appearance: \"All Star Comics #8\",\r\n    characters: \"Princess Diana\",\r\n  },\r\n  {\r\n    id: \"dc-martian\",\r\n    superhero: \"Martian Manhunter\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"J'onn J'onzz\",\r\n    first_appearance: \"Detective Comics #225\",\r\n    characters: \"Martian Manhunter\",\r\n  },\r\n  {\r\n    id: \"dc-robin\",\r\n    superhero: \"Robin/Nightwing\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dick Grayson\",\r\n    first_appearance: \"Detective Comics #38\",\r\n    characters: \"Dick Grayson\",\r\n  },\r\n  {\r\n    id: \"dc-blue\",\r\n    superhero: \"Blue Beetle\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dan Garret\",\r\n    first_appearance: \"Mystery Men Comics #1\",\r\n    characters: \"Dan Garret, Ted Kord, Jaime Reyes\",\r\n  },\r\n  {\r\n    id: \"dc-black\",\r\n    superhero: \"Black Canary\",\r\n    publisher: \"DC Comics\",\r\n    alter_ego: \"Dinah Drake\",\r\n    first_appearance: \"Flash Comics #86\",\r\n    characters: \"Dinah Drake, Dinah Lance\",\r\n  },\r\n  {\r\n    id: \"marvel-spider\",\r\n    superhero: \"Spider Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Peter Parker\",\r\n    first_appearance: \"Amazing Fantasy #15\",\r\n    characters: \"Peter Parker\",\r\n  },\r\n  {\r\n    id: \"marvel-captain\",\r\n    superhero: \"Captain America\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Steve Rogers\",\r\n    first_appearance: \"Captain America Comics #1\",\r\n    characters: \"Steve Rogers\",\r\n  },\r\n  {\r\n    id: \"marvel-iron\",\r\n    superhero: \"Iron Man\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Tony Stark\",\r\n    first_appearance: \"Tales of Suspense #39\",\r\n    characters: \"Tony Stark\",\r\n  },\r\n  {\r\n    id: \"marvel-thor\",\r\n    superhero: \"Thor\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Thor Odinson\",\r\n    first_appearance: \"Journey into Myster #83\",\r\n    characters: \"Thor Odinson\",\r\n  },\r\n  {\r\n    id: \"marvel-hulk\",\r\n    superhero: \"Hulk\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Bruce Banner\",\r\n    first_appearance: \"The Incredible Hulk #1\",\r\n    characters: \"Bruce Banner\",\r\n  },\r\n  {\r\n    id: \"marvel-wolverine\",\r\n    superhero: \"Wolverine\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"James Howlett\",\r\n    first_appearance: \"The Incredible Hulk #180\",\r\n    characters: \"James Howlett\",\r\n  },\r\n  {\r\n    id: \"marvel-daredevil\",\r\n    superhero: \"Daredevil\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Matthew Michael Murdock\",\r\n    first_appearance: \"Daredevil #1\",\r\n    characters: \"Matthew Michael Murdock\",\r\n  },\r\n  {\r\n    id: \"marvel-hawkeye\",\r\n    superhero: \"Hawkeye\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Clinton Francis Barton\",\r\n    first_appearance: \"Tales of Suspense #57\",\r\n    characters: \"Clinton Francis Barton\",\r\n  },\r\n  {\r\n    id: \"marvel-cyclops\",\r\n    superhero: \"Cyclops\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Scott Summers\",\r\n    first_appearance: \"X-Men #1\",\r\n    characters: \"Scott Summers\",\r\n  },\r\n  {\r\n    id: \"marvel-silver\",\r\n    superhero: \"Silver Surfer\",\r\n    publisher: \"Marvel Comics\",\r\n    alter_ego: \"Norrin Radd\",\r\n    first_appearance: \"The Fantastic Four #48\",\r\n    characters: \"Norrin Radd\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeroCard = ({\r\n  id,\r\n  superhero,\r\n  alter_ego,\r\n  first_appearance,\r\n  characters,\r\n}) => {\r\n  return (\r\n    <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-md-4\">\r\n          <img\r\n            src={`./assets/heroes/${id}.jpg`}\r\n            className=\"card-img\"\r\n            alt={superhero}\r\n          ></img>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{superhero}</h5>\r\n            <p className=\"card-text\">{alter_ego}</p>\r\n            {alter_ego !== characters && (\r\n              <p className=\"card-text\"> {characters} </p>\r\n            )}\r\n            <p className=\"card-text\">\r\n              <small className=\"text-muted\">{first_appearance}</small>\r\n            </p>\r\n            <Link to={`/hero/${id}`}>Más...</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCard;\r\n","import React, { useMemo } from \"react\";\r\nimport { getHeroesByPublisher } from \"../../selectors/getHeroesByPublisher\";\r\nimport HeroCard from \"./HeroCard\";\r\n\r\nconst HeroList = ({ publisher }) => {\r\n  const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\r\n  return (\r\n    <>\r\n      <div className=\"row rows-cols-1 row-cols-md-3 g-3 animate__animated animate__fadeIn\">\r\n        {heroes.map((hero) => (\r\n          <HeroCard key={hero.id} {...hero} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeroList;\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n  const validPublisher = [\"DC Comics\", \"Marvel Comics\"];\r\n\r\n  if (!validPublisher.includes(publisher)) {\r\n    throw new Error(`publisher ${publisher} no encontrado, sorry`);\r\n  }\r\n  return heroes.filter((hero) => hero.publisher === publisher);\r\n};\r\n","import React from \"react\";\r\nimport HeroList from \"../heroes/HeroList\";\r\n\r\nconst MarvelScreen = () => {\r\n  return (\r\n    <div>\r\n      <h1>Marvel Screen</h1>\r\n      <hr />\r\n      <HeroList publisher=\"Marvel Comics\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarvelScreen;\r\n","import React from \"react\";\r\nimport HeroList from \"../heroes/HeroList\";\r\n\r\nconst DcScreen = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dc Screen</h1>\r\n      <hr />\r\n      <HeroList publisher=\"DC Comics\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DcScreen;\r\n","import React, { useMemo } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport HeroCard from \"../heroes/HeroCard\";\r\nimport { useForm } from \"../../Hooks/useForm\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { getHeroesByName } from \"../../selectors/getHeroesByName\";\r\n\r\nconst SearchScreen = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { q = \"\" } = queryString.parse(location.search);\r\n\r\n  const [values, handleInputChange] = useForm({ name: q });\r\n\r\n  const { name } = values;\r\n\r\n  const heroesFilters = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    navigate(`?q=${name}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Search Screen</h1>\r\n      <hr />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          <h4> Search Form </h4>\r\n          <hr />\r\n\r\n          <form onSubmit={handleSearch}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Find your hero\"\r\n              className=\"form-control\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn m-1 btn-clock btn-outline-primary\"\r\n            >\r\n              Search...\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <h4>Results</h4>\r\n          <hr />\r\n\r\n          {heroesFilters.map((hero) => (\r\n            <HeroCard key={hero.id} {...hero} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name) => {\r\n  if (name === \"\") {\r\n    return [];\r\n  }\r\n\r\n  name = name.toLocaleLowerCase();\r\n\r\n  return heroes.filter((hero) =>\r\n    hero.superhero.toLocaleLowerCase().includes(name)\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { useParams, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { getHeroByID } from \"../../selectors/getHeroById\";\r\n\r\nconst HeroesSreen = () => {\r\n  const { heroeId } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const hero = useMemo(() => getHeroByID(heroeId), [heroeId]);\r\n\r\n  console.log(hero);\r\n  console.log(\"hola\");\r\n\r\n  if (!hero) {\r\n    return <Navigate to=\"/marvel\" />;\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const { superhero, publisher, alter_ego, first_appearance, characters } =\r\n    hero;\r\n\r\n  return (\r\n    <div className=\"row mt-5\">\r\n      <div className=\"col-4\">\r\n        <img\r\n          src={`../assets/heroes/${heroeId}.jpg`}\r\n          alt={superhero}\r\n          className=\"img-thumbnail animate__animated animate__fadeInBottomLeft\"\r\n        />\r\n      </div>\r\n      <div className=\"col-8\">\r\n        <h3 style={{ fontSize: \"3.2rem\" }}> {superhero} </h3>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <b>Alter ego: </b> {alter_ego}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>publisher: </b> {publisher}\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <b>First appearance: </b> {first_appearance}\r\n          </li>\r\n        </ul>\r\n\r\n        <h5 style={{ fontSize: \"2.5rem\" }}>characters</h5>\r\n        <p style={{ fontSize: \"2rem\" }}>{characters}</p>\r\n\r\n        <button className=\"btn btn-outline-info\" onClick={handleReturn}>\r\n          return\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroesSreen;\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroByID = (id) => {\r\n  return heroes.find((hero) => hero.id === id);\r\n};\r\n","import { Navbar } from \"../components/ui/Navbar\";\r\nimport MarvelScreen from \"../components/marvel/MarvelScreen\";\r\nimport DcScreen from \"../components/dc/DcScreen\";\r\nimport SearchScreen from \"../components/search/SearchScreen\";\r\nimport HeroesSreen from \"../components/heroes/HeroesSreen\";\r\n\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nconst DashBoardRouters = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path=\"marvel\" element={<MarvelScreen />} />\r\n          <Route path=\"hero/:heroeId\" element={<HeroesSreen />} />\r\n          <Route path=\"dc\" element={<DcScreen />} />\r\n          <Route path=\"search\" element={<SearchScreen />} />\r\n          <Route path=\"/\" element={<MarvelScreen />} />\r\n        </Routes>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoardRouters;\r\n","import { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return user.logged ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nconst PublicRoute = ({ children }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return user.logged ? <Navigate to=\"/marvel\" /> : children;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import LoginScreen from \"../components/login/LoginScreen\";\r\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\r\nimport DashBoardRouters from \"./DashBoardRouters\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={\r\n            <PublicRoute>\r\n              <LoginScreen />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/*\"\r\n          element={\r\n            <PrivateRoute>\r\n              <DashBoardRouters />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\n// const state = {\r\n//   name: \"Martin\",\r\n//   logged: true,\r\n// };\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...action.payload,\r\n        logged: true,\r\n      };\r\n\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useEffect, useReducer } from \"react\";\nimport AppRouter from \"./routers/AppRouter\";\nimport { AuthContext } from \"./auth/AuthContext\";\nimport { authReducer } from \"./auth/authReducer\";\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem(\"user\")) || { logged: false };\n};\n\nfunction App() {\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  useEffect(() => {\n    if (!user) return;\n\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }, [user]);\n\n  return (\n    <AuthContext.Provider value={{ user, dispatch }}>\n      <AppRouter />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}